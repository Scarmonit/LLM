version: '3.8'

services:
  # AWS CLI MCP Server
  aws-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.aws-mcp
    container_name: aws-mcp-server
    restart: unless-stopped
    volumes:
      # Mount AWS credentials from host
      - ${HOME}/.aws:/root/.aws:ro
      # Optional: Mount shared data
      - ./data:/app/data
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_PROFILE=${AWS_PROFILE:-default}
      - NODE_ENV=production
    stdin_open: true
    tty: true
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Terraform MCP Server
  terraform-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.terraform-mcp
    container_name: terraform-mcp-server
    restart: unless-stopped
    volumes:
      # Mount Terraform projects
      - ./terraform:/terraform
      # Mount AWS credentials for Terraform AWS provider
      - ${HOME}/.aws:/root/.aws:ro
      # Optional: Mount shared state backend config
      - ./data:/app/data
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_PROFILE=${AWS_PROFILE:-default}
      - TF_IN_AUTOMATION=1
      - TF_INPUT=0
      - NODE_ENV=production
    stdin_open: true
    tty: true
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "terraform", "version"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mcp-network:
    driver: bridge
    name: mcp-network

volumes:
  aws-credentials:
    driver: local
  terraform-projects:
    driver: local
